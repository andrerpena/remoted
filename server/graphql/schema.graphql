type Query {
  jobs(offset: Int, limit: Int): [Job]
}
type Job {
  id: String!
  title: String!
  description: String!
  descriptionHtml: String!
  tags: [String!]!
  relativeUrl: String!
  company: Company
  createdAt: String!
  publishedAt: String!
  locationRaw: String
  locationRequired: String
  locationPreferred: String
  locationPreferredTimeZone: Int
  locationPreferredTimeZoneTolerance: Int
  salaryRaw: String
  salaryExact: Int
  salaryMin: Int
  salaryMax: Int
  salaryCurrency: String
  salaryEquity: Boolean
}

type Company {
  id: String!
  name: String!
  displayName: String!
  relativeUrl: String
}

type Mutation {
  addJob(input: JobInput!): Job
  addCompany(input: CompanyInput!): Company
}

input JobInput {
  title: String!
  description: String!
  tags: [String!]!
  publishedAt: String!
  companyId: Int!
  locationRaw: String
  locationRequired: String
  locationPreferred: String
  locationPreferredTimezone: Int
  locationPreferredTimezoneTolerance: Int
  salaryRaw: String
  salaryExact: Int
  salaryMin: Int
  salaryMax: Int
  salaryCurrency: String
  salaryEquity: Boolean
}

input CompanyInput {
  displayName: String!
}

schema {
  query: Query
  mutation: Mutation
}
