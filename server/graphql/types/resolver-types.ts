// Code generated by github.com/prisma/graphqlgen, DO NOT EDIT.

import { GraphQLResolveInfo } from "graphql";
import { Job } from "../../model";
import { Context } from "./context";

export namespace QueryResolvers {
  export const defaultResolvers = {};

  export interface ArgsJobs {
    offset: number | null;
    limit: number | null;
  }

  export type JobsResolver = (
    parent: undefined,
    args: ArgsJobs,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => Job[] | null | Promise<Job[] | null>;

  export interface Type {
    jobs: (
      parent: undefined,
      args: ArgsJobs,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => Job[] | null | Promise<Job[] | null>;
  }
}

export namespace JobResolvers {
  export const defaultResolvers = {
    id: (parent: Job) => (parent.id === undefined ? null : parent.id),
    title: (parent: Job) => parent.title
  };

  export type IdResolver = (
    parent: Job,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type TitleResolver = (
    parent: Job,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export interface Type {
    id: (
      parent: Job,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    title: (
      parent: Job,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;
  }
}

export interface Resolvers {
  Query: QueryResolvers.Type;
  Job: JobResolvers.Type;
}
